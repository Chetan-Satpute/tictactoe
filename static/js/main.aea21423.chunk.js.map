{"version":3,"sources":["helper.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EMPTY","X","index","player","board","x","o","value","won","found","i","j","actions","actionList","push","result","move","max_value","available","maximum","mv","terminate","min_val","val","minimum","messages","App","useState","setBoard","msg","setMsg","setTerminate","handleClick","event","target","className","useEffect","winner","opt","optimalMove","console","log","role","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea21423.chunk.js","sourcesContent":["export const EMPTY = \"-\";\nexport const X = \"X\";\nexport const O = \"O\";\n\nexport type BoardValue = \"-\" | \"X\" | \"O\";\n\nexport const index: Record<string, number> = {\n  \"top-left\": 0,\n  \"top-center\": 1,\n  \"top-right\": 2,\n  \"middle-left\": 3,\n  \"middle-center\": 4,\n  \"middle-right\": 5,\n  \"bottom-left\": 6,\n  \"bottom-center\": 7,\n  \"bottom-right\": 8,\n};\n\nexport function player(board: BoardValue[]) {\n  let x = 0;\n  let o = 0;\n\n  for (const value of board) {\n    if (value === X) {\n      x += 1;\n    } else if (value === O) {\n      o += 1;\n    }\n  }\n\n  if (x > o) {\n    return O;\n  } else {\n    return X;\n  }\n}\n\nexport function won(board: BoardValue[]) {\n  let found = false;\n  // Check row\n  for (let i = 0; i < 3; i++) {\n    found = true;\n    for (let j = i * 3; j < i * 3 + 3; j++) {\n      if (board[i * 3] !== board[j]) {\n        found = false;\n      }\n    }\n\n    if (found && board[i * 3] !== EMPTY) {\n      if (board[i * 3] === X) return 1;\n      else return -1;\n    }\n  }\n\n  // Check column\n  for (let i = 0; i < 3; i++) {\n    found = true;\n    for (let j = 0; j < 9; j += 3) {\n      if (board[i] !== board[i + j]) {\n        found = false;\n      }\n    }\n\n    if (found && board[i] !== EMPTY) {\n      if (board[i] === X) return 1;\n      else return -1;\n    }\n  }\n\n  // Check diagonal\n  found = true;\n  for (let i = 0, j = 0; i < 3 && j < 3; i++, j++) {\n    if (board[0] !== board[i * 3 + j]) {\n      found = false;\n    }\n  }\n\n  if (found && board[0] !== EMPTY) {\n    if (board[0] === X) return 1;\n    else return -1;\n  }\n\n  found = true;\n  for (let i = 0, j = 2; i < 3 && j >= 0; i++, j--) {\n    if (board[2] !== board[i * 3 + j]) {\n      found = false;\n    }\n  }\n\n  if (found && board[2] !== EMPTY) {\n    if (board[2] === X) return 1;\n    else return -1;\n  }\n\n  // Empty space available\n  for (let i = 0; i < 9; i++) {\n    if (board[i] === EMPTY) {\n      return null;\n    }\n  }\n\n  // Draw\n  return 0;\n}\n\nexport function actions(board: BoardValue[]) {\n  let actionList: number[] = [];\n\n  for (let i = 0; i < 9; i++) {\n    if (board[i] === EMPTY) {\n      actionList.push(i);\n    }\n  }\n\n  return actionList;\n}\n\nexport function result(board: BoardValue[], move: number) {\n  board[move] = player(board);\n\n  return board;\n}\n\nfunction max_value(board: BoardValue[]) {\n  let available = actions(board);\n\n  let maximum = [-2, available[0]];\n\n  for (const mv of available) {\n    let res = result([...board], mv);\n    let terminate = won(res);\n\n    if (terminate !== null) {\n      if (terminate > maximum[0]) {\n        maximum = [terminate, mv];\n      }\n    } else {\n      let [val, move] = min_val(result([...board], mv));\n\n      if (val > maximum[0]) {\n        maximum = [val, mv];\n      }\n    }\n  }\n\n  return maximum;\n}\n\nfunction min_val(board: BoardValue[]) {\n  let available = actions(board);\n\n  let minimum = [2, available[0]];\n  \n  for (const mv of available) {\n    let res = result([...board], mv);\n    let terminate = won(res);\n\n    if (terminate !== null) {\n      if (terminate < minimum[0]) {\n        minimum = [terminate, mv];\n      }\n    } else {\n      let [val, move] = max_value(result([...board], mv));\n\n      if (val < minimum[0]) {\n        minimum = [val, mv];\n      }\n    }\n  }\n\n  return minimum;\n}\n\nexport function optimalMove(board: BoardValue[]): number {\n\n  let move = min_val([...board])[1];\n\n  return move;\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  EMPTY,\n  X,\n  O,\n  BoardValue,\n  index,\n  player,\n  won,\n  optimalMove,\n} from \"./helper\";\nimport \"./App.css\";\n\nconst messages = [\n  \"Make a move !\",\n  \"Computer Thinking !\",\n  \"X Won !!\",\n  \"O Won !!\",\n  \"It was a Draw !!\",\n];\n\nfunction App() {\n  // prettier-ignore\n  const [board, setBoard] = useState<BoardValue[]>([\n    EMPTY,  EMPTY,  EMPTY,\n    EMPTY,  EMPTY,  EMPTY,\n    EMPTY,  EMPTY,  EMPTY,\n  ]);\n\n  const [msg, setMsg] = useState(0);\n  const [terminate, setTerminate] = useState(false);\n\n  /**\n   * If match is not terminated\n   * make a move at the cell clicked by user (if cell is empty)\n   * and trigger ai move\n   * @param event mouse click event\n   */\n  const handleClick = (event: React.MouseEvent) => {\n    if (!terminate) {\n      let i = index[(event.target as Element).className];\n\n      if (board[i] === EMPTY) {\n        \n        // Make user move\n        board[i] = player(board);\n        setMsg(1);\n        setBoard([...board]);\n      }\n    }\n  };\n\n  /**\n   * Chek if a player won or game is draw\n   *\n   * if so terminate the game and show appropriate msg\n   *\n   * if not terminated then make ai move\n   */\n  useEffect(() => {\n    var winner = won(board);\n\n    if (winner !== null) {\n      setTerminate(true);\n\n      if (winner === 1) {\n        setMsg(2);\n      } else if (winner === -1) {\n        setMsg(3);\n      } else if (winner === 0) {\n        setMsg(4);\n      }\n    }\n  }, [board, terminate, msg]);\n\n  useEffect(() => {\n\n    // Make Ai Move\n    if (!terminate && msg === 1) {\n      let opt = optimalMove(board);\n\n      console.log(opt);\n\n      board[opt] = O;\n      setMsg(0);\n      setBoard([...board]);\n    }\n\n  }, [terminate, msg, board]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"\">\n        <h1 className=\"text-white text-center\">Tic-Tac-Toe</h1>\n      </header>\n\n      <main>\n        <div className=\"alert text-white text-center\" role=\"alert\">\n          {messages[msg]}\n        </div>\n\n        <div className=\"board p-3\">\n          <table className=\"text-light text-center\">\n            <tbody>\n              <tr>\n                <td className=\"top-left\" onClick={handleClick}>\n                  {board[0]}\n                </td>\n                <td className=\"top-center\" onClick={handleClick}>\n                  {board[1]}\n                </td>\n                <td className=\"top-right\" onClick={handleClick}>\n                  {board[2]}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"middle-left\" onClick={handleClick}>\n                  {board[3]}\n                </td>\n                <td className=\"middle-center\" onClick={handleClick}>\n                  {board[4]}\n                </td>\n                <td className=\"middle-right\" onClick={handleClick}>\n                  {board[5]}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"bottom-left\" onClick={handleClick}>\n                  {board[6]}\n                </td>\n                <td className=\"bottom-center\" onClick={handleClick}>\n                  {board[7]}\n                </td>\n                <td className=\"bottom-right\" onClick={handleClick}>\n                  {board[8]}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </main>\n\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}